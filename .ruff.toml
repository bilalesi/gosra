# Ruff configuration file
# https://docs.astral.sh/ruff/configuration/

# Set the maximum line length to 88 (Black's default)
line-length = 88
indent-width = 4

# Assume Python 3.11
target-version = "py311"

# Exclude a variety of commonly ignored directories
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[lint]
# Enable a comprehensive set of rules
select = [
    # Pyflakes
    "F",
    # pycodestyle
    "E",
    "W",
    # isort
    "I",
    # pydocstyle
    "D",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-bandit
    "S",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # pylint
    "PL",
    # ruff-specific rules
    "RUF",
]

ignore = [
    # Allow non-abstract empty methods in abstract base classes
    "B027",
    # Allow boolean positional values in function calls
    "FBT003",
    # Ignore complexity
    "C901",
    "PLR0911",
    "PLR0912",
    "PLR0913",
    "PLR0915",
    # Allow print statements (useful for debugging)
    "T201",
    # Allow assert statements
    "S101",
    # Allow hardcoded bind all interfaces
    "S104",
    # Ignore missing docstrings for now
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",

    "D205",
    "D212",
]

# Allow fix for all enabled rules (when `--fix`) is provided
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[lint.per-file-ignores]
# Tests can use magic values, assertions, and imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]
# Migration files can have long lines and magic values
"**/migrations/**/*" = ["E501", "PLR2004"]

[lint.isort]
case-sensitive = true
split-on-trailing-comma = true
force-single-line = false

[lint.pydocstyle]
convention = "google"

[format]
# Like Black, use double quotes for strings
quote-style = "double"

# Like Black, indent with spaces, rather than tabs
indent-style = "space"

# Like Black, respect magic trailing commas
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending
line-ending = "auto"

# Enable preview mode to access latest formatting features
preview = false
